name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]
        # You can add more Node.js versions here if needed

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js with caching for npm
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'  # This will cache the node_modules directory

      # Step 3: Install dependencies using npm ci (for clean installs)
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the application (if applicable)
      - name: Build application
        run: npm run build --if-present

      # Step 5: Run tests
      - name: Run tests
        run: npm test -- --passWithNoTests  # `--passWithNoTests` allows the build to succeed even if no tests are found

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password or token stored in GitHub Secrets

      # Step 7: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest .

      # Step 8: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest
